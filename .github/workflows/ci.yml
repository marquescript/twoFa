name: CI

on:
  pull_request:
    branches:
      - develop

jobs:
  build:
    name: "Build and Test"
    runs-on: ubuntu-latest
    environment: ENV_FILE_TEST

    steps:
    - uses: actions/checkout@v4

    - name: Setup Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Setup pnpm
      uses: pnpm/action-setup@v4
      with:
        version: 9
    
    - name: Setup node
      uses: actions/setup-node@v4
      with:
        node-version: 22
        cache: pnpm

    - name: Install dependencies
      run: pnpm install

    - name: Setup env test file
      run: |
        cat <<EOF > .env.test
        echo "DATABASE_URL=${{ secrets.DATABASE_URL }}" > .env.test
        echo "ENCRYPTION_KEY=${{ secrets.ENCRYPTION_KEY }}" >> .env.test
        echo "JWT_PRIVATE_KEY=${{ secrets.JWT_PRIVATE_KEY }}" >> .env.test
        echo "JWT_PUBLIC_KEY=${{ secrets.JWT_PUBLIC_KEY }}" >> .env.test
        echo "NODE_ENV=${{ secrets.NODE_ENV }}" >> .env.test
        echo "PORT=${{ secrets.PORT }}" >> .env.test
        echo "TWOFA_APP_NAME=${{ secrets.TWOFA_APP_NAME }}" >> .env.test
        EOF

    - name: Run e2e tests
      run: pnpm test:e2e

    - name: Generate Tag
      id: generate_tag
      run: |
        SHA=${echo $GITHUB_SHA | head -c7}
        echo "sha=$SHA" >> $GITHUB_OUTPUT

    - name: Login to Docker Hub
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    - name: Build and push docker image
      uses: docker/build-push-action@v5
      with:
        push: true
        tags: marquescript/twoFa-api:${{ steps.generate_tag.outputs.sha }},marquescript/twoFa-api:latest